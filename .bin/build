#!/usr/bin/env node

'use strict'

const Client = require('bitcoin-core')
const options = require('../conf.json')
const fs = require('fs')
const path = require('path')

const client = new Client(options)

const addExtensionFunction = (commands) =>
  commands.map(({ cmd, args }) => `
  /**
   * ${cmd}
   ${args ? '* ' + args + '\n   */' : '*/'}
  ${cmd} = function(...args) {
    return this.command('${cmd}', ...args)
  }`).join('\n')

client.command('help').then((info) => {
  let omni_commands = info.split('\n').filter(t => t.startsWith('omni'))
  let commands = omni_commands.map(command => {
    let [cmd, ...rest] = command.split(' ')
    return {
      cmd,
      args: rest.join(' ')
    }
  })

  // console.log(commands)

  fs.writeFileSync(path.resolve(__dirname, '../index.js'), `const RpcClient = require('bitcoin-core')

class OmniRpcClient extends RpcClient {
  constructor(options = {
    agentOptions,
    headers,
    host,
    logger,
    network,
    password,
    port,
    ssl,
    timeout,
    username,
    version,
    wallet,
  }) {
    super(options)
  }
  ${addExtensionFunction(commands)}
}

module.exports = OmniRpcClient
`)
})
